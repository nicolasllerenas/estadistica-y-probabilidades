---
title: "Examen Final"
format: html
editor: visual
---
#Librerías
```{r}
library(ggplot2)
library(readr)
library(kableExtra)
library(dplyr)
library(vcd)
library(knitr)
library(stringr)
DF = read_csv("L2B.csv")
DF
```

```{r}
# Cargar librerías necesarias
library(dplyr)
library(stringr)

# Cargar los datos
DF <- read.csv("L2B.csv")  # Reemplaza con el nombre real del archivo si es necesario

# Vista previa de los datos
head(DF)

# Dividir las variables en Sisto y Diasto usando str_split_fixed
m <- str_split_fixed(DF$Presion, "/", 2)
DF$Sisto <- as.numeric(m[, 1])
DF$Diasto <- as.numeric(m[, 2])
DFsinna <- na.omit(DF)
DF


# Eliminamos las observaciones con más de un dato faltante
DF_clean <- DF %>%
  filter(rowSums(is.na(.)) <= 1)

# Calculamos el número total de registros y pacientes
total_registros <- nrow(DF_clean)
pacientes_diferentes <- n_distinct(DF_clean$Id)

# Calculamos la probabilidad de que un registro no tenga datos faltantes
prob_sin_faltantes <- sum(rowSums(is.na(DF)) == 0) / nrow(DF)

# Probabilidad de que un registro haya sido tomado por una máquina
prob_maquina <- sum(!is.na(DF$Máquina)) / nrow(DF)

# Mostrar resultados
cat("Total de registros después de limpiar:", total_registros, "\n")
cat("Número de pacientes diferentes:", pacientes_diferentes, "\n")
cat("Probabilidad de que un registro no tenga datos faltantes:", prob_sin_faltantes, "\n")
cat("Probabilidad de que un registro haya sido tomado por una máquina:", prob_maquina, "\n")

```
```{r}
# Datos
n <- 25  # Número de pacientes en la sesión


# 1. Probabilidad de que un registro no haya sido tomado por máquina dado que contiene datos faltantes
p_faltantes <- 1-  prob_sin_faltantes
p_no_maquina <- 1 - prob_maquina
p_no_maquina_dado_faltantes <- (p_no_maquina * p_faltantes) / p_faltantes

# 2. Probabilidad de que un registro no tenga datos faltantes dado que fue tomado por una máquina
p_no_faltante_maquina <- 1 - (1-p_no_maquina_dado_faltantes)

# 3. Modelo de registros con datos faltantes por máquina
valor_esperado <- n * prob_maquina * p_faltante_maquina  # Valor esperado de registros con faltantes por máquina

# Resultados
cat("P(No máquina | Faltantes):", p_no_maquina_dado_faltantes, "\n")
cat("P(No faltantes | Máquina):", p_no_faltante_maquina, "\n")
cat("Valor esperado de registros con faltantes por máquina:", valor_esperado, "\n")

```
```{r}
hist(DFsinna$Temperatura)
boxplot(DFsinna$Temperatura)
nrow(DF)-nrow(na.omit(DF))
temp39 = nrow(DFsinna[DFsinna$Temperatura == 39,]) / nrow(DFsinna)
```

```{r}
hist(DF$IMC)
M = DFsinna[DFsinna$Sexo == "M",]
F = DFsinna[DFsinna$Sexo == "F",]
hist(M$IMC)
hist(F$IMC)
```
```{r}
nrow(DFsinna[DFsinna$Sisto >= 130 | DFsinna$Diasto >= 90,]) / nrow(DFsinna)
hipers = DFsinna[DFsinna$Sisto >= 130 | DFsinna$Diasto >= 90,]
length(unique(hipers$Id)) / length(unique(DFsinna$Id))
```
Considere y ejecute el siguiente fragmento de código:

```{r}
C <- c(rgb(0, 1, 1, 0.2)
, rgb(0, 1, 1, 0.2)
, rgb(0, 1, 1, 0.2)
, rgb(1, 1, 0, 0.2)
, rgb(1, 0.5, 0, 0.6)
, rgb(1, 0, 0, 1)
)
op <- par(bty = "n")
boxplot(DFP$Ed ~ DFP$Act:DFP$Seg
, varwidth = TRUE
, lex.order = FALSE
, col = C
, xlab = "nivel de actividad vs seguimiento"
, ylab = "edad (años)"
, cex.axis = 0.6
, names = c("Baja", "Media", "Alta", "Baja", "Media", "Alta")
, main = "Edad vs. nivel de actividad de los pacientes"
)
legend("topleft"
, legend = c("sin seguimiento"
, "con seguimiento por hipertensión ocasional"
, "con seguimiento por hipertensión regular"
, "con seguimiento por hipertensión estricto")
, fill = c(C[1], C[4], C[5], C[6])
, cex = 0.6
, bty = "n"
)
abline(h = 100, lty = 3)
par(op)
```


